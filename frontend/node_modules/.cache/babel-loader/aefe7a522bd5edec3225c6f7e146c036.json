{"ast":null,"code":"var _jsxFileName = \"/Users/damianly/Desktop/Raya-React-DGDash/react-dg-dash/src/pages/dashboard/applicants/ApplicantsTabBar.jsx\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ApplicantsTabBar = ({\n  applicantsSectionEnum,\n  applicantsSection,\n  setApplicantsSection\n}) => {\n  const applicantsSectionOnClickHandler = section => {\n    setApplicantsSection(applicantsSectionEnum[section]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"applicants-tab-bar tabs is-boxed\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [{\n        title: 'Search',\n        section: applicantsSectionEnum.SEARCH\n      }, {\n        title: 'To Review',\n        section: applicantsSectionEnum.TO_REVIEW\n      }, {\n        title: 'Friend Pass',\n        section: applicantsSectionEnum.FRIEND_PASS\n      }, {\n        title: 'Accepted: Push to Release',\n        section: applicantsSectionEnum.ACCEPTED_PUSH_TO_RELEASE\n      }, {\n        title: 'GIA',\n        section: applicantsSectionEnum.GIA\n      }, {\n        title: 'Waitlisted: Push to Release',\n        section: applicantsSectionEnum.WAITLISTED_PUSH_TO_RELEASE\n      }, {\n        title: 'Accepted: On App',\n        section: applicantsSectionEnum.ACCEPTED_ON_APP\n      }, {\n        title: 'Waitlisted',\n        section: applicantsSectionEnum.WAITLISTED\n      }, {\n        title: 'Banned',\n        section: applicantsSectionEnum.BANNED\n      }].map(tabInfo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${applicantsSection === tabInfo.section ? 'is-active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          role: \"tabpanel\",\n          onClick: () => applicantsSectionOnClickHandler(tabInfo.section),\n          children: tabInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ApplicantsTabBar;\nApplicantsTabBar.propTypes = {\n  applicantsSectionEnum: PropTypes.shape({\n    SEARCH: PropTypes.string.isRequired,\n    TO_REVIEW: PropTypes.string.isRequired,\n    FRIEND_PASS: PropTypes.string.isRequired,\n    ACCEPTED_PUSH_TO_RELEASE: PropTypes.string.isRequired,\n    GIA: PropTypes.string.isRequired,\n    WAITLISTED_PUSH_TO_RELEASE: PropTypes.string.isRequired,\n    ACCEPTED_ON_APP: PropTypes.string.isRequired,\n    WAITLISTED: PropTypes.string.isRequired,\n    BANNED: PropTypes.string.isRequired\n  }).isRequired,\n  applicantsSection: PropTypes.string.isRequired,\n  setApplicantsSection: PropTypes.func.isRequired\n};\nexport default ApplicantsTabBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicantsTabBar\");","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya-React-DGDash/react-dg-dash/src/pages/dashboard/applicants/ApplicantsTabBar.jsx"],"names":["React","PropTypes","ApplicantsTabBar","applicantsSectionEnum","applicantsSection","setApplicantsSection","applicantsSectionOnClickHandler","section","title","SEARCH","TO_REVIEW","FRIEND_PASS","ACCEPTED_PUSH_TO_RELEASE","GIA","WAITLISTED_PUSH_TO_RELEASE","ACCEPTED_ON_APP","WAITLISTED","BANNED","map","tabInfo","propTypes","shape","string","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ApplicantsTabBar = ({ applicantsSectionEnum, applicantsSection, setApplicantsSection }) => {\n  const applicantsSectionOnClickHandler = (section) => {\n    setApplicantsSection(applicantsSectionEnum[section]);\n  };\n\n  return (\n    <div className=\"applicants-tab-bar tabs is-boxed\">\n      <ul>\n        {\n              [\n                { title: 'Search', section: applicantsSectionEnum.SEARCH },\n                { title: 'To Review', section: applicantsSectionEnum.TO_REVIEW },\n                { title: 'Friend Pass', section: applicantsSectionEnum.FRIEND_PASS },\n                { title: 'Accepted: Push to Release', section: applicantsSectionEnum.ACCEPTED_PUSH_TO_RELEASE },\n                { title: 'GIA', section: applicantsSectionEnum.GIA },\n                { title: 'Waitlisted: Push to Release', section: applicantsSectionEnum.WAITLISTED_PUSH_TO_RELEASE },\n                { title: 'Accepted: On App', section: applicantsSectionEnum.ACCEPTED_ON_APP },\n                { title: 'Waitlisted', section: applicantsSectionEnum.WAITLISTED },\n                { title: 'Banned', section: applicantsSectionEnum.BANNED },\n              ].map((tabInfo) => (\n                  <li className={`${applicantsSection === tabInfo.section ? 'is-active' : ''}`}>\n                    <a\n                      role=\"tabpanel\"\n                      onClick={() => applicantsSectionOnClickHandler(tabInfo.section)}\n                    >\n                      {tabInfo.title}\n                    </a>\n                  </li>\n                ))\n            }\n      </ul>\n    </div>\n  );\n};\n\nApplicantsTabBar.propTypes = {\n  applicantsSectionEnum: PropTypes.shape({\n    SEARCH: PropTypes.string.isRequired,\n    TO_REVIEW: PropTypes.string.isRequired,\n    FRIEND_PASS: PropTypes.string.isRequired,\n    ACCEPTED_PUSH_TO_RELEASE: PropTypes.string.isRequired,\n    GIA: PropTypes.string.isRequired,\n    WAITLISTED_PUSH_TO_RELEASE: PropTypes.string.isRequired,\n    ACCEPTED_ON_APP: PropTypes.string.isRequired,\n    WAITLISTED: PropTypes.string.isRequired,\n    BANNED: PropTypes.string.isRequired,\n  }).isRequired,\n  applicantsSection: PropTypes.string.isRequired,\n  setApplicantsSection: PropTypes.func.isRequired,\n};\n\nexport default ApplicantsTabBar;\n"]},"metadata":{},"sourceType":"module"}