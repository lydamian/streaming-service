{"ast":null,"code":"import faker from 'faker';\n\nfunction getRandomItem(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nconst getApplicantData = ({\n  userId\n}) => {\n  if (_.isNil(userId)) {\n    console.error('[ERROR] func getApplicantData: the fuck is this user id null for');\n    return {};\n  }\n\n  return {\n    userId,\n    name: faker.name.findName(),\n    instagramId: faker.datatype.uuid(),\n    instagramVisibility: getRandomItem(['public', 'private']),\n    isInstagramVerified: faker.datatype.boolean().toString(),\n    birthDate: faker.date.past(),\n    displayGender: getRandomItem(['straight', 'gay', 'bi-sexual'])\n  };\n};\n\nconst calculateAge = dateOfBirth => {\n  if (_.isEmpty(dateOfBirth)) {\n    return 0;\n  }\n\n  const diffMS = Date.now() - dateOfBirth.getTime();\n  const ageDt = new Date(diffMS);\n  return Math.abs(ageDt.getUTCFullYear() - 1970);\n};\n\nexport default {\n  getRandomItem,\n  calculateAge,\n  getApplicantData\n};","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya-React-DGDash/react-dg-dash/src/utils/helpers.js"],"names":["faker","getRandomItem","items","Math","floor","random","length","getApplicantData","userId","_","isNil","console","error","name","findName","instagramId","datatype","uuid","instagramVisibility","isInstagramVerified","boolean","toString","birthDate","date","past","displayGender","calculateAge","dateOfBirth","isEmpty","diffMS","Date","now","getTime","ageDt","abs","getUTCFullYear"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,KAAK,CAACI,MAAjC,CAAD,CAAZ;AACD;;AAED,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACvC,MAAIC,CAAC,CAACC,KAAF,CAAQF,MAAR,CAAJ,EAAqB;AACnBG,IAAAA,OAAO,CAACC,KAAR,CAAc,kEAAd;AACA,WAAO,EAAP;AACD;;AACD,SAAO;AACLJ,IAAAA,MADK;AAELK,IAAAA,IAAI,EAAEb,KAAK,CAACa,IAAN,CAAWC,QAAX,EAFD;AAGLC,IAAAA,WAAW,EAAEf,KAAK,CAACgB,QAAN,CAAeC,IAAf,EAHR;AAILC,IAAAA,mBAAmB,EAAEjB,aAAa,CAAC,CAAC,QAAD,EAAW,SAAX,CAAD,CAJ7B;AAKLkB,IAAAA,mBAAmB,EAAEnB,KAAK,CAACgB,QAAN,CAAeI,OAAf,GAAyBC,QAAzB,EALhB;AAMLC,IAAAA,SAAS,EAAEtB,KAAK,CAACuB,IAAN,CAAWC,IAAX,EANN;AAOLC,IAAAA,aAAa,EAAExB,aAAa,CAAC,CAAC,UAAD,EAAa,KAAb,EAAoB,WAApB,CAAD;AAPvB,GAAP;AASD,CAdD;;AAgBA,MAAMyB,YAAY,GAAIC,WAAD,IAAiB;AACpC,MAAIlB,CAAC,CAACmB,OAAF,CAAUD,WAAV,CAAJ,EAA4B;AAC1B,WAAO,CAAP;AACD;;AACD,QAAME,MAAM,GAAGC,IAAI,CAACC,GAAL,KAAaJ,WAAW,CAACK,OAAZ,EAA5B;AACA,QAAMC,KAAK,GAAG,IAAIH,IAAJ,CAASD,MAAT,CAAd;AAEA,SAAO1B,IAAI,CAAC+B,GAAL,CAASD,KAAK,CAACE,cAAN,KAAyB,IAAlC,CAAP;AACD,CARD;;AAUA,eAAe;AACblC,EAAAA,aADa;AAEbyB,EAAAA,YAFa;AAGbnB,EAAAA;AAHa,CAAf","sourcesContent":["import faker from 'faker';\n\nfunction getRandomItem(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nconst getApplicantData = ({ userId }) => {\n  if (_.isNil(userId)) {\n    console.error('[ERROR] func getApplicantData: the fuck is this user id null for');\n    return {};\n  }\n  return {\n    userId,\n    name: faker.name.findName(),\n    instagramId: faker.datatype.uuid(),\n    instagramVisibility: getRandomItem(['public', 'private']),\n    isInstagramVerified: faker.datatype.boolean().toString(),\n    birthDate: faker.date.past(),\n    displayGender: getRandomItem(['straight', 'gay', 'bi-sexual']),\n  };\n};\n\nconst calculateAge = (dateOfBirth) => {\n  if (_.isEmpty(dateOfBirth)) {\n    return 0;\n  }\n  const diffMS = Date.now() - dateOfBirth.getTime();\n  const ageDt = new Date(diffMS);\n\n  return Math.abs(ageDt.getUTCFullYear() - 1970);\n};\n\nexport default {\n  getRandomItem,\n  calculateAge,\n  getApplicantData,\n};\n"]},"metadata":{},"sourceType":"module"}