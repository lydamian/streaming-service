{"ast":null,"code":"var _jsxFileName = \"/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/parts/alerts/Alerts.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Alerts.css';\nimport { clearAlert, getAllAlerts } from 'state-management/slices/alertsSlice';\nimport { useDispatch, useSelector } from 'react-redux'; // import PropTypes from 'prop-types';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alerts = () => {\n  _s();\n\n  const alerts = useSelector(getAllAlerts);\n  console.log(alerts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alerts\",\n    children: alerts.map(alert => /*#__PURE__*/_jsxDEV(Alert, {\n      id: alert.id,\n      message: alert.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Alerts, \"do8Z0pkRcuBHTH6TvhV9QAQG8ok=\", false, function () {\n  return [useSelector];\n});\n\n_c = Alerts;\n\nconst Alert = ({\n  id,\n  message\n}) => {\n  _s2();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    className: \"alert has-background-success\",\n    children: [message, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"button\",\n      onClick: e => dispatch(clearAlert(id)),\n      style: {\n        float: 'right'\n      },\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Alert, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = Alert;\nAlert.propTypes = {};\nexport default Alerts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alerts\");\n$RefreshReg$(_c2, \"Alert\");","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/parts/alerts/Alerts.jsx"],"names":["React","clearAlert","getAllAlerts","useDispatch","useSelector","Alerts","alerts","console","log","map","alert","id","message","Alert","dispatch","e","float","propTypes"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,qCAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,MAAM,GAAGF,WAAW,CAACF,YAAD,CAA1B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cAEIA,MAAM,CAACG,GAAP,CAAYC,KAAD,iBACT,QAAC,KAAD;AACE,MAAA,EAAE,EAAEA,KAAK,CAACC,EADZ;AAEE,MAAA,OAAO,EAAED,KAAK,CAACE;AAFjB;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;GAAMP,M;UACWD,W;;;KADXC,M;;AAiBN,MAAMQ,KAAK,GAAG,CAAC;AAAEF,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAAqB;AAAA;;AACjC,QAAME,QAAQ,GAAGX,WAAW,EAA5B;AAEA,sBACE;AAAK,IAAA,EAAE,EAAEQ,EAAT;AAAa,IAAA,SAAS,EAAC,8BAAvB;AAAA,eACGC,OADH,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,QAAhC;AAAyC,MAAA,OAAO,EAAGG,CAAD,IAAOD,QAAQ,CAACb,UAAU,CAACU,EAAD,CAAX,CAAjE;AAAmF,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXD;;IAAMH,K;UACaV,W;;;MADbU,K;AAaNA,KAAK,CAACI,SAAN,GAAkB,EAAlB;AAGA,eAAeZ,MAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Alerts.css';\nimport { clearAlert, getAllAlerts } from 'state-management/slices/alertsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n// import PropTypes from 'prop-types';\n\nconst Alerts = () => {\n  const alerts = useSelector(getAllAlerts);\n  console.log(alerts);\n  return (\n    <div className=\"alerts\">\n      {\n        alerts.map((alert) => (\n          <Alert\n            id={alert.id}\n            message={alert.message}\n          />\n        ))\n      }\n    </div>\n  );\n};\n\nconst Alert = ({ id, message }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div id={id} className=\"alert has-background-success\">\n      {message}\n      <button type=\"button\" className=\"button\" onClick={(e) => dispatch(clearAlert(id))} style={{ float: 'right' }}>\n        ‚ùå\n      </button>\n    </div>\n  );\n};\n\nAlert.propTypes = {\n};\n\nexport default Alerts;\n"]},"metadata":{},"sourceType":"module"}