{"ast":null,"code":"/* eslint-disable semi */\n\n/* eslint-disable no-param-reassign */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport devHelpers from 'utils/devHelpers';\nimport applicantsService from 'services/applicants';\nconst initialState = {\n  applicantsData: [...devHelpers.getFakeApplicantsData({\n    num: 10\n  })]\n};\nexport const applicantsSlice = createSlice({\n  name: 'applicants',\n  initialState,\n  reducers: {\n    updateApplicantsData(state, action) {\n      const applicantsData = action.payload;\n      state.applicantsData = [...applicantsData];\n    }\n\n  }\n});\nexport const fetchAllApplicants = createAsyncThunk('applicants/fetchApplicants', async () => {\n  const response = await applicantsService.getAllApplicants();\n  return response;\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  updateApplicantsData\n} = applicantsSlice.actions;\nexport default applicantsSlice.reducer;","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/features/applicants/applicantsSlice.js"],"names":["createSlice","createAsyncThunk","devHelpers","applicantsService","initialState","applicantsData","getFakeApplicantsData","num","applicantsSlice","name","reducers","updateApplicantsData","state","action","payload","fetchAllApplicants","response","getAllApplicants","actions","reducer"],"mappings":"AAAA;;AACA;AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA6C,kBAA7C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,CACd,GAAGH,UAAU,CAACI,qBAAX,CAAiC;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAjC,CADW;AADG,CAArB;AAMA,OAAO,MAAMC,eAAe,GAAGR,WAAW,CAAC;AACzCS,EAAAA,IAAI,EAAE,YADmC;AAEzCL,EAAAA,YAFyC;AAGzCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,oBAAoB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClC,YAAMR,cAAc,GAAGQ,MAAM,CAACC,OAA9B;AACAF,MAAAA,KAAK,CAACP,cAAN,GAAuB,CACrB,GAAGA,cADkB,CAAvB;AAGD;;AANO;AAH+B,CAAD,CAAnC;AAaP,OAAO,MAAMU,kBAAkB,GAAGd,gBAAgB,CAAC,4BAAD,EAA+B,YAAY;AAC3F,QAAMe,QAAQ,GAAG,MAAMb,iBAAiB,CAACc,gBAAlB,EAAvB;AACA,SAAOD,QAAP;AACD,CAHiD,CAA3C,C,CAKP;;AACA,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAA2BH,eAAe,CAACU,OAAjD;AAEP,eAAeV,eAAe,CAACW,OAA/B","sourcesContent":["/* eslint-disable semi */\n/* eslint-disable no-param-reassign */\nimport { createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport devHelpers from 'utils/devHelpers';\nimport applicantsService from 'services/applicants';\n\nconst initialState = {\n  applicantsData: [\n    ...devHelpers.getFakeApplicantsData({ num: 10 }),\n  ],\n};\n\nexport const applicantsSlice = createSlice({\n  name: 'applicants',\n  initialState,\n  reducers: {\n    updateApplicantsData(state, action) {\n      const applicantsData = action.payload;\n      state.applicantsData = [\n        ...applicantsData,\n      ];\n    },\n  },\n});\n\nexport const fetchAllApplicants = createAsyncThunk('applicants/fetchApplicants', async () => {\n  const response = await applicantsService.getAllApplicants();\n  return response\n});\n\n// Action creators are generated for each case reducer function\nexport const { updateApplicantsData } = applicantsSlice.actions;\n\nexport default applicantsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}