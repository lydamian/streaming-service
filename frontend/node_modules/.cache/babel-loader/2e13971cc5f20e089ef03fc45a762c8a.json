{"ast":null,"code":"/* eslint-disable semi */\n\n/* eslint-disable no-param-reassign */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport applicantsService from 'services/applicants';\nexport const fetchApplicants = createAsyncThunk('applicants/fetchApplicants', async () => {\n  const response = await applicantsService.getApplicants();\n  return response;\n});\nconst initialState = {\n  status: 'idle',\n  applicantsData: []\n};\nexport const applicantsSlice = createSlice({\n  name: 'applicants',\n  initialState,\n  reducers: {\n    updateApplicantsData(state, action) {\n      const applicantsData = action.payload;\n      state.applicantsData = [...applicantsData];\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchApplicants.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchApplicants.fulfilled, (state, action) => {\n      const {\n        applicants\n      } = action.payload;\n      state.applicantsData = applicants;\n      state.status = 'idle';\n    });\n  }\n});\nexport const getApplicants = state => state.applicants.applicantsData; // Action creators are generated for each case reducer function\n\nexport const {\n  updateApplicantsData\n} = applicantsSlice.actions;\nexport default applicantsSlice.reducer;","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/features/applicants/applicantsSlice.js"],"names":["createSlice","createAsyncThunk","applicantsService","fetchApplicants","response","getApplicants","initialState","status","applicantsData","applicantsSlice","name","reducers","updateApplicantsData","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","applicants","actions","reducer"],"mappings":"AAAA;;AACA;AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAAC,4BAAD,EAA+B,YAAY;AACxF,QAAMG,QAAQ,GAAG,MAAMF,iBAAiB,CAACG,aAAlB,EAAvB;AACA,SAAOD,QAAP;AACD,CAH8C,CAAxC;AAKP,MAAME,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,MADW;AAEnBC,EAAAA,cAAc,EAAE;AAFG,CAArB;AAKA,OAAO,MAAMC,eAAe,GAAGT,WAAW,CAAC;AACzCU,EAAAA,IAAI,EAAE,YADmC;AAEzCJ,EAAAA,YAFyC;AAGzCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,oBAAoB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClC,YAAMN,cAAc,GAAGM,MAAM,CAACC,OAA9B;AACAF,MAAAA,KAAK,CAACL,cAAN,GAAuB,CACrB,GAAGA,cADkB,CAAvB;AAGD;;AANO,GAH+B;AAWzCQ,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,OADH,CACWf,eAAe,CAACgB,OAD3B,EACqCN,KAAD,IAAW;AAC3CA,MAAAA,KAAK,CAACN,MAAN,GAAe,SAAf;AACD,KAHH,EAIGW,OAJH,CAIWf,eAAe,CAACiB,SAJ3B,EAIsC,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACrD,YAAM;AAAEO,QAAAA;AAAF,UAAiBP,MAAM,CAACC,OAA9B;AACAF,MAAAA,KAAK,CAACL,cAAN,GAAuBa,UAAvB;AACAR,MAAAA,KAAK,CAACN,MAAN,GAAe,MAAf;AACD,KARH;AASD;AArBwC,CAAD,CAAnC;AAwBP,OAAO,MAAMF,aAAa,GAAIQ,KAAD,IAAWA,KAAK,CAACQ,UAAN,CAAiBb,cAAlD,C,CAEP;;AACA,OAAO,MAAM;AAAEI,EAAAA;AAAF,IAA2BH,eAAe,CAACa,OAAjD;AAEP,eAAeb,eAAe,CAACc,OAA/B","sourcesContent":["/* eslint-disable semi */\n/* eslint-disable no-param-reassign */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport applicantsService from 'services/applicants';\n\nexport const fetchApplicants = createAsyncThunk('applicants/fetchApplicants', async () => {\n  const response = await applicantsService.getApplicants();\n  return response;\n});\n\nconst initialState = {\n  status: 'idle',\n  applicantsData: [],\n};\n\nexport const applicantsSlice = createSlice({\n  name: 'applicants',\n  initialState,\n  reducers: {\n    updateApplicantsData(state, action) {\n      const applicantsData = action.payload;\n      state.applicantsData = [\n        ...applicantsData,\n      ];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchApplicants.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchApplicants.fulfilled, (state, action) => {\n        const { applicants } = action.payload;\n        state.applicantsData = applicants\n        state.status = 'idle';\n      });\n  },\n});\n\nexport const getApplicants = (state) => state.applicants.applicantsData\n\n// Action creators are generated for each case reducer function\nexport const { updateApplicantsData } = applicantsSlice.actions;\n\nexport default applicantsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}