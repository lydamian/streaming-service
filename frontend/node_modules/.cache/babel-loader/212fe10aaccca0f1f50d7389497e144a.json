{"ast":null,"code":"var _jsxFileName = \"/Users/damianly/Desktop/Raya-React-DGDash/react-dg-dash/src/pages/dashboard/applicants/Applicants.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport faker from 'faker';\nimport _ from 'lodash';\nimport './applicants.css';\nimport ApplicantsDataList from 'applicantsDataList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandomItem(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nconst getApplicantData = ({\n  userId\n}) => {\n  if (_.isNil(userId)) {\n    console.error('[ERROR] func getApplicantData: the fuck is this user id null for');\n    return {};\n  }\n\n  return {\n    userId,\n    name: faker.name.findName(),\n    instagramId: faker.datatype.uuid(),\n    instagramVisibility: getRandomItem(['public', 'private']),\n    isInstagramVerified: faker.datatype.boolean().toString(),\n    birthDate: faker.date.past(),\n    displayGender: getRandomItem(['straight', 'gay', 'bi-sexual'])\n  };\n};\n\nconst calculateAge = dateOfBirth => {\n  if (_.isEmpty(dateOfBirth)) {\n    return 0;\n  }\n\n  const diffMS = Date.now() - dateOfBirth.getTime();\n  const ageDt = new Date(diffMS);\n  return Math.abs(ageDt.getUTCFullYear() - 1970);\n};\n\nconst Applicants = () => {\n  _s();\n\n  const applicantsSectionEnum = {\n    SEARCH: 'SEARCH',\n    TO_REVIEW: 'TO_REVIEW',\n    FRIEND_PASS: 'FRIEND_PASS',\n    ACCEPTED_PUSH_TO_RELEASE: 'ACCEPTED_PUSH_TO_RELEASE',\n    GIA: 'GIA',\n    WAITLISTED_PUSH_TO_RELEASE: 'WAITLISTED_PUSH_TO_RELEASE',\n    ACCEPTED_ON_APP: 'ACCEPTED_ON_APP',\n    WAITLISTED: 'WAITLISTED',\n    BANNED: 'BANNED'\n  };\n  const [applicantsSection, setApplicantsSection] = useState(applicantsSectionEnum.SEARCH);\n  const [applicantInfo, setApplicantInfo] = useState(getApplicantData({}));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"applicants\",\n    children: [/*#__PURE__*/_jsxDEV(ApplicantsTabBar, {\n      applicantsSectionEnum: applicantsSectionEnum,\n      applicantsSection: applicantsSection,\n      setApplicantsSection: setApplicantsSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApplicantsTable, {\n      applicantInfo: applicantInfo,\n      setApplicantInfo: setApplicantInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), !_.isEmpty(applicantInfo) && /*#__PURE__*/_jsxDEV(ApplicantDetailedInfo // eslint-disable-next-line react/jsx-props-no-spreading\n    , { ...applicantInfo,\n      setApplicantInfo: setApplicantInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Applicants, \"2HgVtFnWVu0bCXvQzkx5NjTSUNg=\");\n\n_c = Applicants;\n\nconst ApplicantsTabBar = ({\n  applicantsSectionEnum,\n  applicantsSection,\n  setApplicantsSection\n}) => {\n  const applicantsSectionOnClickHandler = section => {\n    setApplicantsSection(applicantsSectionEnum[section]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"applicants-tab-bar tabs is-boxed\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [{\n        title: 'Search',\n        section: applicantsSectionEnum.SEARCH\n      }, {\n        title: 'To Review',\n        section: applicantsSectionEnum.TO_REVIEW\n      }, {\n        title: 'Friend Pass',\n        section: applicantsSectionEnum.FRIEND_PASS\n      }, {\n        title: 'Accepted: Push to Release',\n        section: applicantsSectionEnum.ACCEPTED_PUSH_TO_RELEASE\n      }, {\n        title: 'GIA',\n        section: applicantsSectionEnum.GIA\n      }, {\n        title: 'Waitlisted: Push to Release',\n        section: applicantsSectionEnum.WAITLISTED_PUSH_TO_RELEASE\n      }, {\n        title: 'Accepted: On App',\n        section: applicantsSectionEnum.ACCEPTED_ON_APP\n      }, {\n        title: 'Waitlisted',\n        section: applicantsSectionEnum.WAITLISTED\n      }, {\n        title: 'Banned',\n        section: applicantsSectionEnum.BANNED\n      }].map(tabInfo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${applicantsSection === tabInfo.section ? 'is-active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          role: \"tabpanel\",\n          onClick: () => applicantsSectionOnClickHandler(tabInfo.section),\n          children: tabInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ApplicantsTabBar;\nApplicantsTabBar.propTypes = {\n  applicantsSectionEnum: PropTypes.shape({\n    SEARCH: PropTypes.string.isRequired,\n    TO_REVIEW: PropTypes.string.isRequired,\n    FRIEND_PASS: PropTypes.string.isRequired,\n    ACCEPTED_PUSH_TO_RELEASE: PropTypes.string.isRequired,\n    GIA: PropTypes.string.isRequired,\n    WAITLISTED_PUSH_TO_RELEASE: PropTypes.string.isRequired,\n    ACCEPTED_ON_APP: PropTypes.string.isRequired,\n    WAITLISTED: PropTypes.string.isRequired,\n    BANNED: PropTypes.string.isRequired\n  }).isRequired,\n  applicantsSection: PropTypes.string.isRequired,\n  setApplicantsSection: PropTypes.func.isRequired\n};\nexport default Applicants;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Applicants\");\n$RefreshReg$(_c2, \"ApplicantsTabBar\");","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya-React-DGDash/react-dg-dash/src/pages/dashboard/applicants/Applicants.jsx"],"names":["React","useState","PropTypes","faker","_","ApplicantsDataList","getRandomItem","items","Math","floor","random","length","getApplicantData","userId","isNil","console","error","name","findName","instagramId","datatype","uuid","instagramVisibility","isInstagramVerified","boolean","toString","birthDate","date","past","displayGender","calculateAge","dateOfBirth","isEmpty","diffMS","Date","now","getTime","ageDt","abs","getUTCFullYear","Applicants","applicantsSectionEnum","SEARCH","TO_REVIEW","FRIEND_PASS","ACCEPTED_PUSH_TO_RELEASE","GIA","WAITLISTED_PUSH_TO_RELEASE","ACCEPTED_ON_APP","WAITLISTED","BANNED","applicantsSection","setApplicantsSection","applicantInfo","setApplicantInfo","ApplicantsTabBar","applicantsSectionOnClickHandler","section","title","map","tabInfo","propTypes","shape","string","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport faker from 'faker';\nimport _ from 'lodash';\nimport './applicants.css';\nimport ApplicantsDataList from 'applicantsDataList';\n\nfunction getRandomItem(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nconst getApplicantData = ({ userId }) => {\n  if (_.isNil(userId)) {\n    console.error('[ERROR] func getApplicantData: the fuck is this user id null for');\n    return {};\n  }\n  return {\n    userId,\n    name: faker.name.findName(),\n    instagramId: faker.datatype.uuid(),\n    instagramVisibility: getRandomItem(['public', 'private']),\n    isInstagramVerified: faker.datatype.boolean().toString(),\n    birthDate: faker.date.past(),\n    displayGender: getRandomItem(['straight', 'gay', 'bi-sexual']),\n  };\n};\n\nconst calculateAge = (dateOfBirth) => {\n  if (_.isEmpty(dateOfBirth)) {\n    return 0;\n  }\n  const diffMS = Date.now() - dateOfBirth.getTime();\n  const ageDt = new Date(diffMS);\n\n  return Math.abs(ageDt.getUTCFullYear() - 1970);\n};\n\nconst Applicants = () => {\n  const applicantsSectionEnum = {\n    SEARCH: 'SEARCH',\n    TO_REVIEW: 'TO_REVIEW',\n    FRIEND_PASS: 'FRIEND_PASS',\n    ACCEPTED_PUSH_TO_RELEASE: 'ACCEPTED_PUSH_TO_RELEASE',\n    GIA: 'GIA',\n    WAITLISTED_PUSH_TO_RELEASE: 'WAITLISTED_PUSH_TO_RELEASE',\n    ACCEPTED_ON_APP: 'ACCEPTED_ON_APP',\n    WAITLISTED: 'WAITLISTED',\n    BANNED: 'BANNED',\n  };\n\n  const [applicantsSection, setApplicantsSection] = useState(applicantsSectionEnum.SEARCH);\n  const [applicantInfo, setApplicantInfo] = useState(getApplicantData({}));\n\n  return (\n    <div className=\"applicants\">\n      <ApplicantsTabBar\n        applicantsSectionEnum={applicantsSectionEnum}\n        applicantsSection={applicantsSection}\n        setApplicantsSection={setApplicantsSection}\n      />\n      <ApplicantsTable\n        applicantInfo={applicantInfo}\n        setApplicantInfo={setApplicantInfo}\n      />\n      {(!_.isEmpty(applicantInfo)) && (\n      <ApplicantDetailedInfo\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...applicantInfo}\n        setApplicantInfo={setApplicantInfo}\n      />\n      )}\n    </div>\n  );\n};\n\nconst ApplicantsTabBar = ({ applicantsSectionEnum, applicantsSection, setApplicantsSection }) => {\n  const applicantsSectionOnClickHandler = (section) => {\n    setApplicantsSection(applicantsSectionEnum[section]);\n  };\n\n  return (\n    <div className=\"applicants-tab-bar tabs is-boxed\">\n      <ul>\n        {\n              [\n                { title: 'Search', section: applicantsSectionEnum.SEARCH },\n                { title: 'To Review', section: applicantsSectionEnum.TO_REVIEW },\n                { title: 'Friend Pass', section: applicantsSectionEnum.FRIEND_PASS },\n                { title: 'Accepted: Push to Release', section: applicantsSectionEnum.ACCEPTED_PUSH_TO_RELEASE },\n                { title: 'GIA', section: applicantsSectionEnum.GIA },\n                { title: 'Waitlisted: Push to Release', section: applicantsSectionEnum.WAITLISTED_PUSH_TO_RELEASE },\n                { title: 'Accepted: On App', section: applicantsSectionEnum.ACCEPTED_ON_APP },\n                { title: 'Waitlisted', section: applicantsSectionEnum.WAITLISTED },\n                { title: 'Banned', section: applicantsSectionEnum.BANNED },\n              ].map((tabInfo) => (\n                <li className={`${applicantsSection === tabInfo.section ? 'is-active' : ''}`}>\n                  <a\n                    role=\"tabpanel\"\n                    onClick={() => applicantsSectionOnClickHandler(tabInfo.section)}\n                  >\n                    {tabInfo.title}\n                  </a>\n                </li>\n              ))\n            }\n      </ul>\n    </div>\n  );\n};\nApplicantsTabBar.propTypes = {\n  applicantsSectionEnum: PropTypes.shape({\n    SEARCH: PropTypes.string.isRequired,\n    TO_REVIEW: PropTypes.string.isRequired,\n    FRIEND_PASS: PropTypes.string.isRequired,\n    ACCEPTED_PUSH_TO_RELEASE: PropTypes.string.isRequired,\n    GIA: PropTypes.string.isRequired,\n    WAITLISTED_PUSH_TO_RELEASE: PropTypes.string.isRequired,\n    ACCEPTED_ON_APP: PropTypes.string.isRequired,\n    WAITLISTED: PropTypes.string.isRequired,\n    BANNED: PropTypes.string.isRequired,\n  }).isRequired,\n  applicantsSection: PropTypes.string.isRequired,\n  setApplicantsSection: PropTypes.func.isRequired,\n};\n\nexport default Applicants;\n"]},"metadata":{},"sourceType":"module"}