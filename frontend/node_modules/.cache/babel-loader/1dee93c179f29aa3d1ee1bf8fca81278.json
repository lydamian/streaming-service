{"ast":null,"code":"import RayaAxiosClient from './raya-axios-client';\n/**\n * gets authentication token if username, password,\n * and twoFactorAuthToken is valid.\n *\n * @param {String} username\n * @param {String} password\n * @param {String} twoFactorAuthToken\n * @returns {{token: String, username: String }} Object\n}\n */\n\nconst getAuthToken = async (username, password, twoFactorAuthToken) => {\n  console.log('[authService] getAuthToken:');\n\n  try {\n    const {\n      token,\n      username\n    } = await RayaAxiosClient.post('/api/admin/token', {\n      username,\n      password,\n      twofactor: twoFactorAuthToken\n    });\n    console.log({\n      token,\n      username\n    });\n    return result;\n  } catch (error) {\n    return {};\n  }\n};\n\nexport default {\n  getAuthToken\n};","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/services/authService.js"],"names":["RayaAxiosClient","getAuthToken","username","password","twoFactorAuthToken","console","log","token","post","twofactor","result","error"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,qBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,EAA2BC,kBAA3B,KAAkD;AACrEC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACA,MAAI;AACF,UAAM;AACJC,MAAAA,KADI;AAEJL,MAAAA;AAFI,QAGF,MAAMF,eAAe,CAACQ,IAAhB,CAAqB,kBAArB,EACR;AACEN,MAAAA,QADF;AAEEC,MAAAA,QAFF;AAGEM,MAAAA,SAAS,EAAEL;AAHb,KADQ,CAHV;AASAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AACVC,MAAAA,KADU;AAEVL,MAAAA;AAFU,KAAZ;AAIA,WAAOQ,MAAP;AACD,GAfD,CAeE,OAAMC,KAAN,EAAa;AACb,WAAO,EAAP;AAGD;AACF,CAtBD;;AAwBA,eAAe;AACbV,EAAAA;AADa,CAAf","sourcesContent":["import RayaAxiosClient from './raya-axios-client';\n\n/**\n * gets authentication token if username, password,\n * and twoFactorAuthToken is valid.\n *\n * @param {String} username\n * @param {String} password\n * @param {String} twoFactorAuthToken\n * @returns {{token: String, username: String }} Object\n}\n */\nconst getAuthToken = async (username, password, twoFactorAuthToken) => {\n  console.log('[authService] getAuthToken:');\n  try {\n    const {\n      token,\n      username\n    } = await RayaAxiosClient.post('/api/admin/token',\n      {\n        username,\n        password,\n        twofactor: twoFactorAuthToken,\n      });\n    console.log({\n      token,\n      username,\n    });\n    return result;\n  } catch(error) {\n    return {\n\n    }\n  }\n};\n\nexport default {\n  getAuthToken,\n};\n"]},"metadata":{},"sourceType":"module"}