{"ast":null,"code":"var _jsxFileName = \"/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/navigation/PrivateRoute.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLoggedIn, getStatus } from 'state-management/slices/authSlice';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  _s();\n\n  const isUserLoggedIn = useSelector(isLoggedIn);\n  const status = useSelector(getStatus);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => isUserLoggedIn && status === 'idle' ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 1\n  }, this);\n}\n\n_s(PrivateRoute, \"FwHSCtmixt9TBV+DowQqg5hHeKM=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/navigation/PrivateRoute.jsx"],"names":["React","Route","Redirect","isLoggedIn","getStatus","useSelector","PrivateRoute","children","rest","isUserLoggedIn","status","location","pathname","state","from"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,mCAAtC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAA6C;AAAA;;AAC3C,QAAMC,cAAc,GAAGJ,WAAW,CAACF,UAAD,CAAlC;AACA,QAAMO,MAAM,GAAGL,WAAW,CAACD,SAAD,CAA1B;AACA,sBACF,QAAC,KAAD,OAAWI,IAAX;AAAiB,IAAA,MAAM,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAmBF,cAAc,IAAIC,MAAM,KAAK,MAA7B,GACxCH,QADwC,gBAExC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEK,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADE;AAKD;;GARQL,Y;UACgBD,W,EACRA,W;;;KAFRC,Y;AAUT,eAAeA,YAAf","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLoggedIn, getStatus } from 'state-management/slices/authSlice';\nimport { useSelector } from 'react-redux';\n\nfunction PrivateRoute({ children, ...rest }) {\n  const isUserLoggedIn = useSelector(isLoggedIn);\n  const status = useSelector(getStatus);\n  return (\n<Route {...rest} render={({ location }) => (isUserLoggedIn && status === 'idle' ?\n    children :\n    <Redirect to={{ pathname: '/login', state: { from: location } }} />)} />\n);\n}\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}