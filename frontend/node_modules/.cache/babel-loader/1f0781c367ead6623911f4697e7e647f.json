{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport ALERT_TYPES from 'features/alerts/ALERT_TYPES';\nconst initialState = [];\nexport const alertsSlice = createSlice({\n  name: 'alerts',\n  initialState,\n  reducers: {\n    addAlert(alerts, action) {\n      const {\n        message,\n        type\n      } = action.payload;\n      alerts.push({\n        id: alerts.length,\n        message,\n        type: ALERT_TYPES[type]\n      }); // clear this alert automatically\n\n      setTimeout(() => {}, 5000);\n    },\n\n    clearAlert: (alerts, action) => alerts.filter(alert => alert.id !== action.payload)\n  }\n});\n\nconst getAllAlerts = state => state.alerts;\n\nexport { getAllAlerts };\nexport const {\n  addAlert,\n  clearAlert\n} = alertsSlice.actions;\nexport default alertsSlice.reducer;","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/features/alerts/alertsSlice.js"],"names":["createSlice","ALERT_TYPES","initialState","alertsSlice","name","reducers","addAlert","alerts","action","message","type","payload","push","id","length","setTimeout","clearAlert","filter","alert","getAllAlerts","state","actions","reducer"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,WAAW,GAAGH,WAAW,CAAC;AACrCI,EAAAA,IAAI,EAAE,QAD+B;AAErCF,EAAAA,YAFqC;AAGrCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,MAAD,EAASC,MAAT,EAAiB;AACvB,YAAM;AACJC,QAAAA,OADI;AAEJC,QAAAA;AAFI,UAGFF,MAAM,CAACG,OAHX;AAIAJ,MAAAA,MAAM,CAACK,IAAP,CAAY;AACVC,QAAAA,EAAE,EAAEN,MAAM,CAACO,MADD;AAEVL,QAAAA,OAFU;AAGVC,QAAAA,IAAI,EAAET,WAAW,CAACS,IAAD;AAHP,OAAZ,EALuB,CAUvB;;AACAK,MAAAA,UAAU,CAAC,MAAM,CAEhB,CAFS,EAEP,IAFO,CAAV;AAGD,KAfO;;AAgBRC,IAAAA,UAAU,EAAE,CAACT,MAAD,EAASC,MAAT,KAAoBD,MAAM,CAACU,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACL,EAAN,KAAaL,MAAM,CAACG,OAA7C;AAhBxB;AAH2B,CAAD,CAA/B;;AAuBP,MAAMQ,YAAY,GAAIC,KAAD,IAAWA,KAAK,CAACb,MAAtC;;AAEA,SACEY,YADF;AAIA,OAAO,MAAM;AAAEb,EAAAA,QAAF;AAAYU,EAAAA;AAAZ,IAA2Bb,WAAW,CAACkB,OAA7C;AAEP,eAAelB,WAAW,CAACmB,OAA3B","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport ALERT_TYPES from 'features/alerts/ALERT_TYPES';\n\nconst initialState = [];\n\nexport const alertsSlice = createSlice({\n  name: 'alerts',\n  initialState,\n  reducers: {\n    addAlert(alerts, action) {\n      const {\n        message,\n        type,\n      } = action.payload;\n      alerts.push({\n        id: alerts.length,\n        message,\n        type: ALERT_TYPES[type],\n      });\n      // clear this alert automatically\n      setTimeout(() => {\n\n      }, 5000);\n    },\n    clearAlert: (alerts, action) => alerts.filter((alert) => alert.id !== action.payload),\n  },\n});\n\nconst getAllAlerts = (state) => state.alerts;\n\nexport {\n  getAllAlerts,\n};\n\nexport const { addAlert, clearAlert } = alertsSlice.actions;\n\nexport default alertsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}