{"ast":null,"code":"import RayaAxiosClient from './raya-axios-client';\n/**\n * gets authentication token if username, password,\n * and twoFactorAuthToken is valid.\n *\n * @param {String} username\n * @param {String} password\n * @param {String} twoFactorAuthToken\n * @returns {{token: String, username: String }} Object\n}\n */\n\nconst getAuthToken = async (username, password, twoFactorAuthToken) => {\n  console.log('[authService] getAuthToken:');\n\n  try {\n    const response = await RayaAxiosClient.post('/api/admin/token', {\n      username,\n      password,\n      twofactor: twoFactorAuthToken\n    });\n    console.log('[authService] getAuthToken /api/admin/token response', JSON.stringify({ ...response.data\n    }));\n    return {\n      sucess: true,\n      error: null,\n      ...response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error.message,\n      token: null\n    };\n  }\n};\n\nexport default {\n  getAuthToken\n};","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/services/authService.js"],"names":["RayaAxiosClient","getAuthToken","username","password","twoFactorAuthToken","console","log","response","post","twofactor","JSON","stringify","data","sucess","error","success","message","token"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,qBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,EAA2BC,kBAA3B,KAAkD;AACrEC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMP,eAAe,CAACQ,IAAhB,CAAqB,kBAArB,EACrB;AACEN,MAAAA,QADF;AAEEC,MAAAA,QAFF;AAGEM,MAAAA,SAAS,EAAEL;AAHb,KADqB,CAAvB;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ,EAAoEI,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGJ,QAAQ,CAACK;AAAd,KAAf,CAApE;AACA,WAAO;AACLC,MAAAA,MAAM,EAAE,IADH;AAELC,MAAAA,KAAK,EAAE,IAFF;AAGL,SAAGP,QAAQ,CAACK;AAHP,KAAP;AAKD,GAbD,CAaE,OAAOE,KAAP,EAAc;AACd,WAAO;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELD,MAAAA,KAAK,EAAEA,KAAK,CAACE,OAFR;AAGLC,MAAAA,KAAK,EAAE;AAHF,KAAP;AAKD;AACF,CAtBD;;AAwBA,eAAe;AACbhB,EAAAA;AADa,CAAf","sourcesContent":["import RayaAxiosClient from './raya-axios-client';\n\n/**\n * gets authentication token if username, password,\n * and twoFactorAuthToken is valid.\n *\n * @param {String} username\n * @param {String} password\n * @param {String} twoFactorAuthToken\n * @returns {{token: String, username: String }} Object\n}\n */\nconst getAuthToken = async (username, password, twoFactorAuthToken) => {\n  console.log('[authService] getAuthToken:');\n  try {\n    const response = await RayaAxiosClient.post('/api/admin/token',\n      {\n        username,\n        password,\n        twofactor: twoFactorAuthToken,\n      });\n    console.log('[authService] getAuthToken /api/admin/token response', JSON.stringify({ ...response.data }));\n    return {\n      sucess: true,\n      error: null,\n      ...response.data,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error.message,\n      token: null,\n    };\n  }\n};\n\nexport default {\n  getAuthToken,\n};\n"]},"metadata":{},"sourceType":"module"}