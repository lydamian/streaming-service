{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = [];\nexport const alertsSlice = createSlice({\n  name: 'alerts',\n  initialState,\n  reducers: {\n    addAlert(state, action) {\n      const {\n        message,\n        color\n      } = action.payload;\n      state.push({\n        id: state.length,\n        message,\n        color\n      });\n    },\n\n    clearAlert: (alerts, action) => alerts.filter(alert => alert.id !== action.payload)\n  }\n});\n\nconst getAllAlerts = state => state.alerts;\n\nexport { getAllAlerts };\nexport const {\n  addAlert,\n  clearAlert\n} = alertsSlice.actions;\nexport default alertsSlice.reducer;","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/state-management/slices/alertsSlice.js"],"names":["createSlice","initialState","alertsSlice","name","reducers","addAlert","state","action","message","color","payload","push","id","length","clearAlert","alerts","filter","alert","getAllAlerts","actions","reducer"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;AACrCG,EAAAA,IAAI,EAAE,QAD+B;AAErCF,EAAAA,YAFqC;AAGrCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACtB,YAAM;AACJC,QAAAA,OADI;AAEJC,QAAAA;AAFI,UAGFF,MAAM,CAACG,OAHX;AAIAJ,MAAAA,KAAK,CAACK,IAAN,CAAW;AACTC,QAAAA,EAAE,EAAEN,KAAK,CAACO,MADD;AAETL,QAAAA,OAFS;AAGTC,QAAAA;AAHS,OAAX;AAKD,KAXO;;AAYRK,IAAAA,UAAU,EAAE,CAACC,MAAD,EAASR,MAAT,KAAoBQ,MAAM,CAACC,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACL,EAAN,KAAaL,MAAM,CAACG,OAA7C;AAZxB;AAH2B,CAAD,CAA/B;;AAmBP,MAAMQ,YAAY,GAAIZ,KAAD,IAAWA,KAAK,CAACS,MAAtC;;AAEA,SACEG,YADF;AAIA,OAAO,MAAM;AAAEb,EAAAA,QAAF;AAAYS,EAAAA;AAAZ,IAA2BZ,WAAW,CAACiB,OAA7C;AAEP,eAAejB,WAAW,CAACkB,OAA3B","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = [];\n\nexport const alertsSlice = createSlice({\n  name: 'alerts',\n  initialState,\n  reducers: {\n    addAlert(state, action) {\n      const {\n        message,\n        color,\n      } = action.payload;\n      state.push({\n        id: state.length,\n        message,\n        color,\n      });\n    },\n    clearAlert: (alerts, action) => alerts.filter((alert) => alert.id !== action.payload),\n  },\n});\n\nconst getAllAlerts = (state) => state.alerts;\n\nexport {\n  getAllAlerts,\n};\n\nexport const { addAlert, clearAlert } = alertsSlice.actions;\n\nexport default alertsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}